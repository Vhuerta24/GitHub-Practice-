{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyP6BSBATmuLjstq9JMs1dEQ",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Vhuerta24/GitHub-Practice-/blob/main/2025_RV_cruise%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "8syKWr2xlv6t"
      },
      "outputs": [],
      "source": [
        "import numpy as np                         # NumPy is an array and math library\n",
        "import matplotlib.pyplot as plt            # Matplotlib is a visualization (plotting) library\n",
        "import pandas as pd                        # Pandas lets us work with spreadsheet (.csv) data\n",
        "from datetime import datetime, timedelta   # Datetime helps us work with dates and times\n",
        "from scipy import stats                    # Helps calculate linear regressions NEW"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "filepath_0 = '/content/20250814_CTD02afternoon.csv'\n",
        "filepath_1 = '/content/20250814_CTD02afternoon.csv'"
      ],
      "metadata": {
        "id": "2GKamNzBmFy-"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_0 = pd.read_csv(filepath_0,comment='#')\n",
        "data_1 = pd.read_csv(filepath_1,comment='#')\n",
        "\n",
        "display(data_1)\n",
        "display(data_0)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 884
        },
        "collapsed": true,
        "id": "xT2vZKnUmhgc",
        "outputId": "93e3d2df-7850-4b48-819c-87bca9e87ffb"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "       Unnamed: 0   PRES  DEPTH    density     TEMP  c0uS/cm     PSAL  \\\n",
              "0               0  5.360  5.315  1022.9537  14.9834  38534.0  31.0466   \n",
              "1               1  5.435  5.389  1022.9323  15.0095  38534.0  31.0257   \n",
              "2               2  5.360  5.315  1022.9068  15.0398  38533.0  31.0013   \n",
              "3               3  5.375  5.330  1022.8814  15.0711  38534.0  30.9769   \n",
              "4               4  5.412  5.367  1022.8580  15.0997  38534.0  30.9542   \n",
              "...           ...    ...    ...        ...      ...      ...      ...   \n",
              "28169       28169  2.262  2.243  1022.5463  13.7198  36498.0  30.1989   \n",
              "28170       28170  2.329  2.309  1022.5456  13.7208  36498.0  30.1979   \n",
              "28171       28171  2.314  2.295  1022.5447  13.7219  36498.0  30.1970   \n",
              "28172       28172  2.329  2.309  1022.5444  13.7223  36498.0  30.1966   \n",
              "28173       28173  2.262  2.243  1022.5436  13.7234  36498.0  30.1963   \n",
              "\n",
              "       oxygen_ml_L  sbeox0Mg/L  sbox0Mm/Kg  sbeox0PS      par  flECO-AFL  \\\n",
              "0           3.4463      4.9250     150.460    59.066   115.67     5.8297   \n",
              "1           3.4449      4.9231     150.404    59.066   115.67     5.7992   \n",
              "2           3.4433      4.9208     150.337    59.066   115.99     5.7992   \n",
              "3           3.4416      4.9184     150.268    59.065   116.32     5.7992   \n",
              "4           3.4435      4.9211     150.352    59.123   116.32     5.7992   \n",
              "...            ...         ...         ...       ...      ...        ...   \n",
              "28169       4.3626      6.2346     190.541    72.497  1442.40     4.2424   \n",
              "28170       4.3664      6.2400     190.704    72.561  1344.50     4.2424   \n",
              "28171       4.3671      6.2410     190.737    72.574  1076.50     4.2424   \n",
              "28172       4.3641      6.2367     190.606    72.525   989.38     4.2424   \n",
              "28173       4.3642      6.2369     190.610    72.527  1049.60     4.2424   \n",
              "\n",
              "          ph  CStarAt0  CStarTr0  flag   LATITUDE   LONGITUDE  \\\n",
              "0      8.658    0.5222   87.7610   0.0  47.707833 -122.451667   \n",
              "1      8.663    0.5222   87.7610   0.0  47.707833 -122.451667   \n",
              "2      8.662    0.5222   87.7610   0.0  47.707833 -122.451667   \n",
              "3      8.653    0.5222   87.7610   0.0  47.707833 -122.451667   \n",
              "4      8.653    0.5222   87.7610   0.0  47.707833 -122.451667   \n",
              "...      ...       ...       ...   ...        ...         ...   \n",
              "28169  8.656    0.4578   89.1852   0.0  47.707833 -122.451667   \n",
              "28170  8.656    0.4578   89.1852   0.0  47.707833 -122.451667   \n",
              "28171  8.651    0.4590   89.1583   0.0  47.707833 -122.451667   \n",
              "28172  8.651    0.4590   89.1583   0.0  47.707833 -122.451667   \n",
              "28173  8.656    0.4578   89.1852   0.0  47.707833 -122.451667   \n",
              "\n",
              "       datetime_first_scan  \n",
              "0      2025-08-14 22:08:48  \n",
              "1      2025-08-14 22:08:48  \n",
              "2      2025-08-14 22:08:48  \n",
              "3      2025-08-14 22:08:48  \n",
              "4      2025-08-14 22:08:48  \n",
              "...                    ...  \n",
              "28169  2025-08-14 22:08:48  \n",
              "28170  2025-08-14 22:08:48  \n",
              "28171  2025-08-14 22:08:48  \n",
              "28172  2025-08-14 22:08:48  \n",
              "28173  2025-08-14 22:08:48  \n",
              "\n",
              "[28174 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6638616d-7496-4cdd-897c-0e46f1bfb196\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>PRES</th>\n",
              "      <th>DEPTH</th>\n",
              "      <th>density</th>\n",
              "      <th>TEMP</th>\n",
              "      <th>c0uS/cm</th>\n",
              "      <th>PSAL</th>\n",
              "      <th>oxygen_ml_L</th>\n",
              "      <th>sbeox0Mg/L</th>\n",
              "      <th>sbox0Mm/Kg</th>\n",
              "      <th>sbeox0PS</th>\n",
              "      <th>par</th>\n",
              "      <th>flECO-AFL</th>\n",
              "      <th>ph</th>\n",
              "      <th>CStarAt0</th>\n",
              "      <th>CStarTr0</th>\n",
              "      <th>flag</th>\n",
              "      <th>LATITUDE</th>\n",
              "      <th>LONGITUDE</th>\n",
              "      <th>datetime_first_scan</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>5.360</td>\n",
              "      <td>5.315</td>\n",
              "      <td>1022.9537</td>\n",
              "      <td>14.9834</td>\n",
              "      <td>38534.0</td>\n",
              "      <td>31.0466</td>\n",
              "      <td>3.4463</td>\n",
              "      <td>4.9250</td>\n",
              "      <td>150.460</td>\n",
              "      <td>59.066</td>\n",
              "      <td>115.67</td>\n",
              "      <td>5.8297</td>\n",
              "      <td>8.658</td>\n",
              "      <td>0.5222</td>\n",
              "      <td>87.7610</td>\n",
              "      <td>0.0</td>\n",
              "      <td>47.707833</td>\n",
              "      <td>-122.451667</td>\n",
              "      <td>2025-08-14 22:08:48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>5.435</td>\n",
              "      <td>5.389</td>\n",
              "      <td>1022.9323</td>\n",
              "      <td>15.0095</td>\n",
              "      <td>38534.0</td>\n",
              "      <td>31.0257</td>\n",
              "      <td>3.4449</td>\n",
              "      <td>4.9231</td>\n",
              "      <td>150.404</td>\n",
              "      <td>59.066</td>\n",
              "      <td>115.67</td>\n",
              "      <td>5.7992</td>\n",
              "      <td>8.663</td>\n",
              "      <td>0.5222</td>\n",
              "      <td>87.7610</td>\n",
              "      <td>0.0</td>\n",
              "      <td>47.707833</td>\n",
              "      <td>-122.451667</td>\n",
              "      <td>2025-08-14 22:08:48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>5.360</td>\n",
              "      <td>5.315</td>\n",
              "      <td>1022.9068</td>\n",
              "      <td>15.0398</td>\n",
              "      <td>38533.0</td>\n",
              "      <td>31.0013</td>\n",
              "      <td>3.4433</td>\n",
              "      <td>4.9208</td>\n",
              "      <td>150.337</td>\n",
              "      <td>59.066</td>\n",
              "      <td>115.99</td>\n",
              "      <td>5.7992</td>\n",
              "      <td>8.662</td>\n",
              "      <td>0.5222</td>\n",
              "      <td>87.7610</td>\n",
              "      <td>0.0</td>\n",
              "      <td>47.707833</td>\n",
              "      <td>-122.451667</td>\n",
              "      <td>2025-08-14 22:08:48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>5.375</td>\n",
              "      <td>5.330</td>\n",
              "      <td>1022.8814</td>\n",
              "      <td>15.0711</td>\n",
              "      <td>38534.0</td>\n",
              "      <td>30.9769</td>\n",
              "      <td>3.4416</td>\n",
              "      <td>4.9184</td>\n",
              "      <td>150.268</td>\n",
              "      <td>59.065</td>\n",
              "      <td>116.32</td>\n",
              "      <td>5.7992</td>\n",
              "      <td>8.653</td>\n",
              "      <td>0.5222</td>\n",
              "      <td>87.7610</td>\n",
              "      <td>0.0</td>\n",
              "      <td>47.707833</td>\n",
              "      <td>-122.451667</td>\n",
              "      <td>2025-08-14 22:08:48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>5.412</td>\n",
              "      <td>5.367</td>\n",
              "      <td>1022.8580</td>\n",
              "      <td>15.0997</td>\n",
              "      <td>38534.0</td>\n",
              "      <td>30.9542</td>\n",
              "      <td>3.4435</td>\n",
              "      <td>4.9211</td>\n",
              "      <td>150.352</td>\n",
              "      <td>59.123</td>\n",
              "      <td>116.32</td>\n",
              "      <td>5.7992</td>\n",
              "      <td>8.653</td>\n",
              "      <td>0.5222</td>\n",
              "      <td>87.7610</td>\n",
              "      <td>0.0</td>\n",
              "      <td>47.707833</td>\n",
              "      <td>-122.451667</td>\n",
              "      <td>2025-08-14 22:08:48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28169</th>\n",
              "      <td>28169</td>\n",
              "      <td>2.262</td>\n",
              "      <td>2.243</td>\n",
              "      <td>1022.5463</td>\n",
              "      <td>13.7198</td>\n",
              "      <td>36498.0</td>\n",
              "      <td>30.1989</td>\n",
              "      <td>4.3626</td>\n",
              "      <td>6.2346</td>\n",
              "      <td>190.541</td>\n",
              "      <td>72.497</td>\n",
              "      <td>1442.40</td>\n",
              "      <td>4.2424</td>\n",
              "      <td>8.656</td>\n",
              "      <td>0.4578</td>\n",
              "      <td>89.1852</td>\n",
              "      <td>0.0</td>\n",
              "      <td>47.707833</td>\n",
              "      <td>-122.451667</td>\n",
              "      <td>2025-08-14 22:08:48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28170</th>\n",
              "      <td>28170</td>\n",
              "      <td>2.329</td>\n",
              "      <td>2.309</td>\n",
              "      <td>1022.5456</td>\n",
              "      <td>13.7208</td>\n",
              "      <td>36498.0</td>\n",
              "      <td>30.1979</td>\n",
              "      <td>4.3664</td>\n",
              "      <td>6.2400</td>\n",
              "      <td>190.704</td>\n",
              "      <td>72.561</td>\n",
              "      <td>1344.50</td>\n",
              "      <td>4.2424</td>\n",
              "      <td>8.656</td>\n",
              "      <td>0.4578</td>\n",
              "      <td>89.1852</td>\n",
              "      <td>0.0</td>\n",
              "      <td>47.707833</td>\n",
              "      <td>-122.451667</td>\n",
              "      <td>2025-08-14 22:08:48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28171</th>\n",
              "      <td>28171</td>\n",
              "      <td>2.314</td>\n",
              "      <td>2.295</td>\n",
              "      <td>1022.5447</td>\n",
              "      <td>13.7219</td>\n",
              "      <td>36498.0</td>\n",
              "      <td>30.1970</td>\n",
              "      <td>4.3671</td>\n",
              "      <td>6.2410</td>\n",
              "      <td>190.737</td>\n",
              "      <td>72.574</td>\n",
              "      <td>1076.50</td>\n",
              "      <td>4.2424</td>\n",
              "      <td>8.651</td>\n",
              "      <td>0.4590</td>\n",
              "      <td>89.1583</td>\n",
              "      <td>0.0</td>\n",
              "      <td>47.707833</td>\n",
              "      <td>-122.451667</td>\n",
              "      <td>2025-08-14 22:08:48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28172</th>\n",
              "      <td>28172</td>\n",
              "      <td>2.329</td>\n",
              "      <td>2.309</td>\n",
              "      <td>1022.5444</td>\n",
              "      <td>13.7223</td>\n",
              "      <td>36498.0</td>\n",
              "      <td>30.1966</td>\n",
              "      <td>4.3641</td>\n",
              "      <td>6.2367</td>\n",
              "      <td>190.606</td>\n",
              "      <td>72.525</td>\n",
              "      <td>989.38</td>\n",
              "      <td>4.2424</td>\n",
              "      <td>8.651</td>\n",
              "      <td>0.4590</td>\n",
              "      <td>89.1583</td>\n",
              "      <td>0.0</td>\n",
              "      <td>47.707833</td>\n",
              "      <td>-122.451667</td>\n",
              "      <td>2025-08-14 22:08:48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28173</th>\n",
              "      <td>28173</td>\n",
              "      <td>2.262</td>\n",
              "      <td>2.243</td>\n",
              "      <td>1022.5436</td>\n",
              "      <td>13.7234</td>\n",
              "      <td>36498.0</td>\n",
              "      <td>30.1963</td>\n",
              "      <td>4.3642</td>\n",
              "      <td>6.2369</td>\n",
              "      <td>190.610</td>\n",
              "      <td>72.527</td>\n",
              "      <td>1049.60</td>\n",
              "      <td>4.2424</td>\n",
              "      <td>8.656</td>\n",
              "      <td>0.4578</td>\n",
              "      <td>89.1852</td>\n",
              "      <td>0.0</td>\n",
              "      <td>47.707833</td>\n",
              "      <td>-122.451667</td>\n",
              "      <td>2025-08-14 22:08:48</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>28174 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6638616d-7496-4cdd-897c-0e46f1bfb196')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6638616d-7496-4cdd-897c-0e46f1bfb196 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6638616d-7496-4cdd-897c-0e46f1bfb196');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-cdd3bea0-9b37-468c-9d21-d04164de9221\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cdd3bea0-9b37-468c-9d21-d04164de9221')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-cdd3bea0-9b37-468c-9d21-d04164de9221 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "  <div id=\"id_2ca73058-f3c3-417d-902e-dd68481d2818\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data_1')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_2ca73058-f3c3-417d-902e-dd68481d2818 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('data_1');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data_1",
              "summary": "{\n  \"name\": \"data_1\",\n  \"rows\": 28174,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8133,\n        \"min\": 0,\n        \"max\": 28173,\n        \"num_unique_values\": 28174,\n        \"samples\": [\n          5908,\n          905,\n          9212\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PRES\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 59.885225228543106,\n        \"min\": 0.759,\n        \"max\": 181.949,\n        \"num_unique_values\": 10076,\n        \"samples\": [\n          4.93,\n          5.245,\n          41.236\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DEPTH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 59.35952529226463,\n        \"min\": 0.752,\n        \"max\": 180.347,\n        \"num_unique_values\": 10074,\n        \"samples\": [\n          33.805,\n          2.056,\n          2.294\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"density\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5094970552350204,\n        \"min\": 1021.9917,\n        \"max\": 1024.0656,\n        \"num_unique_values\": 9815,\n        \"samples\": [\n          1023.5751,\n          1023.66,\n          1023.8594\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TEMP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4909668865420825,\n        \"min\": 12.174,\n        \"max\": 15.2436,\n        \"num_unique_values\": 4947,\n        \"samples\": [\n          13.4714,\n          13.7419,\n          13.5741\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"c0uS/cm\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 234.85525368819387,\n        \"min\": 35542.0,\n        \"max\": 38534.0,\n        \"num_unique_values\": 936,\n        \"samples\": [\n          36067.0,\n          36304.0,\n          36532.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PSAL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.21129934464145514,\n        \"min\": 29.6956,\n        \"max\": 31.0466,\n        \"num_unique_values\": 3765,\n        \"samples\": [\n          30.6089,\n          30.4776,\n          30.2136\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"oxygen_ml_L\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2408268914677692,\n        \"min\": 3.4327,\n        \"max\": 4.9676,\n        \"num_unique_values\": 5344,\n        \"samples\": [\n          3.8141,\n          3.7289,\n          3.7496\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sbeox0Mg/L\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3441659951122709,\n        \"min\": 4.9057,\n        \"max\": 7.0992,\n        \"num_unique_values\": 6656,\n        \"samples\": [\n          6.051,\n          6.2944,\n          5.3506\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sbox0Mm/Kg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.552488546171473,\n        \"min\": 149.907,\n        \"max\": 216.949,\n        \"num_unique_values\": 12018,\n        \"samples\": [\n          163.57,\n          162.678,\n          182.289\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sbeox0PS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.511733110736223,\n        \"min\": 58.034,\n        \"max\": 82.16,\n        \"num_unique_values\": 7488,\n        \"samples\": [\n          60.391,\n          59.874,\n          65.017\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"par\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 397.7868886110017,\n        \"min\": 1e-12,\n        \"max\": 3478.8,\n        \"num_unique_values\": 2390,\n        \"samples\": [\n          1.0162,\n          3.059,\n          47.449\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"flECO-AFL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9882874365550949,\n        \"min\": 2.6857,\n        \"max\": 6.8065,\n        \"num_unique_values\": 126,\n        \"samples\": [\n          3.5098,\n          5.7076,\n          4.6698\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ph\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.03053143930656369,\n        \"min\": 8.563,\n        \"max\": 8.675,\n        \"num_unique_values\": 71,\n        \"samples\": [\n          8.641,\n          8.658,\n          8.572\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CStarAt0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.11102517855882357,\n        \"min\": 0.3053,\n        \"max\": 0.9428,\n        \"num_unique_values\": 414,\n        \"samples\": [\n          0.7141,\n          0.7933,\n          0.639\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CStarTr0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.4336168468210237,\n        \"min\": 79.0011,\n        \"max\": 92.6516,\n        \"num_unique_values\": 414,\n        \"samples\": [\n          83.6498,\n          82.0106,\n          85.2352\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"flag\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LATITUDE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.881941824967456e-13,\n        \"min\": 47.70783333333333,\n        \"max\": 47.70783333333333,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          47.70783333333333\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LONGITUDE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.096564868657662e-12,\n        \"min\": -122.45166666666668,\n        \"max\": -122.45166666666668,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          -122.45166666666668\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"datetime_first_scan\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"2025-08-14 22:08:48\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "       Unnamed: 0   PRES  DEPTH    density     TEMP  c0uS/cm     PSAL  \\\n",
              "0               0  5.360  5.315  1022.9537  14.9834  38534.0  31.0466   \n",
              "1               1  5.435  5.389  1022.9323  15.0095  38534.0  31.0257   \n",
              "2               2  5.360  5.315  1022.9068  15.0398  38533.0  31.0013   \n",
              "3               3  5.375  5.330  1022.8814  15.0711  38534.0  30.9769   \n",
              "4               4  5.412  5.367  1022.8580  15.0997  38534.0  30.9542   \n",
              "...           ...    ...    ...        ...      ...      ...      ...   \n",
              "28169       28169  2.262  2.243  1022.5463  13.7198  36498.0  30.1989   \n",
              "28170       28170  2.329  2.309  1022.5456  13.7208  36498.0  30.1979   \n",
              "28171       28171  2.314  2.295  1022.5447  13.7219  36498.0  30.1970   \n",
              "28172       28172  2.329  2.309  1022.5444  13.7223  36498.0  30.1966   \n",
              "28173       28173  2.262  2.243  1022.5436  13.7234  36498.0  30.1963   \n",
              "\n",
              "       oxygen_ml_L  sbeox0Mg/L  sbox0Mm/Kg  sbeox0PS      par  flECO-AFL  \\\n",
              "0           3.4463      4.9250     150.460    59.066   115.67     5.8297   \n",
              "1           3.4449      4.9231     150.404    59.066   115.67     5.7992   \n",
              "2           3.4433      4.9208     150.337    59.066   115.99     5.7992   \n",
              "3           3.4416      4.9184     150.268    59.065   116.32     5.7992   \n",
              "4           3.4435      4.9211     150.352    59.123   116.32     5.7992   \n",
              "...            ...         ...         ...       ...      ...        ...   \n",
              "28169       4.3626      6.2346     190.541    72.497  1442.40     4.2424   \n",
              "28170       4.3664      6.2400     190.704    72.561  1344.50     4.2424   \n",
              "28171       4.3671      6.2410     190.737    72.574  1076.50     4.2424   \n",
              "28172       4.3641      6.2367     190.606    72.525   989.38     4.2424   \n",
              "28173       4.3642      6.2369     190.610    72.527  1049.60     4.2424   \n",
              "\n",
              "          ph  CStarAt0  CStarTr0  flag   LATITUDE   LONGITUDE  \\\n",
              "0      8.658    0.5222   87.7610   0.0  47.707833 -122.451667   \n",
              "1      8.663    0.5222   87.7610   0.0  47.707833 -122.451667   \n",
              "2      8.662    0.5222   87.7610   0.0  47.707833 -122.451667   \n",
              "3      8.653    0.5222   87.7610   0.0  47.707833 -122.451667   \n",
              "4      8.653    0.5222   87.7610   0.0  47.707833 -122.451667   \n",
              "...      ...       ...       ...   ...        ...         ...   \n",
              "28169  8.656    0.4578   89.1852   0.0  47.707833 -122.451667   \n",
              "28170  8.656    0.4578   89.1852   0.0  47.707833 -122.451667   \n",
              "28171  8.651    0.4590   89.1583   0.0  47.707833 -122.451667   \n",
              "28172  8.651    0.4590   89.1583   0.0  47.707833 -122.451667   \n",
              "28173  8.656    0.4578   89.1852   0.0  47.707833 -122.451667   \n",
              "\n",
              "       datetime_first_scan  \n",
              "0      2025-08-14 22:08:48  \n",
              "1      2025-08-14 22:08:48  \n",
              "2      2025-08-14 22:08:48  \n",
              "3      2025-08-14 22:08:48  \n",
              "4      2025-08-14 22:08:48  \n",
              "...                    ...  \n",
              "28169  2025-08-14 22:08:48  \n",
              "28170  2025-08-14 22:08:48  \n",
              "28171  2025-08-14 22:08:48  \n",
              "28172  2025-08-14 22:08:48  \n",
              "28173  2025-08-14 22:08:48  \n",
              "\n",
              "[28174 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-73dcc2ef-6554-4e25-952f-fe556c5c065a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>PRES</th>\n",
              "      <th>DEPTH</th>\n",
              "      <th>density</th>\n",
              "      <th>TEMP</th>\n",
              "      <th>c0uS/cm</th>\n",
              "      <th>PSAL</th>\n",
              "      <th>oxygen_ml_L</th>\n",
              "      <th>sbeox0Mg/L</th>\n",
              "      <th>sbox0Mm/Kg</th>\n",
              "      <th>sbeox0PS</th>\n",
              "      <th>par</th>\n",
              "      <th>flECO-AFL</th>\n",
              "      <th>ph</th>\n",
              "      <th>CStarAt0</th>\n",
              "      <th>CStarTr0</th>\n",
              "      <th>flag</th>\n",
              "      <th>LATITUDE</th>\n",
              "      <th>LONGITUDE</th>\n",
              "      <th>datetime_first_scan</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>5.360</td>\n",
              "      <td>5.315</td>\n",
              "      <td>1022.9537</td>\n",
              "      <td>14.9834</td>\n",
              "      <td>38534.0</td>\n",
              "      <td>31.0466</td>\n",
              "      <td>3.4463</td>\n",
              "      <td>4.9250</td>\n",
              "      <td>150.460</td>\n",
              "      <td>59.066</td>\n",
              "      <td>115.67</td>\n",
              "      <td>5.8297</td>\n",
              "      <td>8.658</td>\n",
              "      <td>0.5222</td>\n",
              "      <td>87.7610</td>\n",
              "      <td>0.0</td>\n",
              "      <td>47.707833</td>\n",
              "      <td>-122.451667</td>\n",
              "      <td>2025-08-14 22:08:48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>5.435</td>\n",
              "      <td>5.389</td>\n",
              "      <td>1022.9323</td>\n",
              "      <td>15.0095</td>\n",
              "      <td>38534.0</td>\n",
              "      <td>31.0257</td>\n",
              "      <td>3.4449</td>\n",
              "      <td>4.9231</td>\n",
              "      <td>150.404</td>\n",
              "      <td>59.066</td>\n",
              "      <td>115.67</td>\n",
              "      <td>5.7992</td>\n",
              "      <td>8.663</td>\n",
              "      <td>0.5222</td>\n",
              "      <td>87.7610</td>\n",
              "      <td>0.0</td>\n",
              "      <td>47.707833</td>\n",
              "      <td>-122.451667</td>\n",
              "      <td>2025-08-14 22:08:48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>5.360</td>\n",
              "      <td>5.315</td>\n",
              "      <td>1022.9068</td>\n",
              "      <td>15.0398</td>\n",
              "      <td>38533.0</td>\n",
              "      <td>31.0013</td>\n",
              "      <td>3.4433</td>\n",
              "      <td>4.9208</td>\n",
              "      <td>150.337</td>\n",
              "      <td>59.066</td>\n",
              "      <td>115.99</td>\n",
              "      <td>5.7992</td>\n",
              "      <td>8.662</td>\n",
              "      <td>0.5222</td>\n",
              "      <td>87.7610</td>\n",
              "      <td>0.0</td>\n",
              "      <td>47.707833</td>\n",
              "      <td>-122.451667</td>\n",
              "      <td>2025-08-14 22:08:48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>5.375</td>\n",
              "      <td>5.330</td>\n",
              "      <td>1022.8814</td>\n",
              "      <td>15.0711</td>\n",
              "      <td>38534.0</td>\n",
              "      <td>30.9769</td>\n",
              "      <td>3.4416</td>\n",
              "      <td>4.9184</td>\n",
              "      <td>150.268</td>\n",
              "      <td>59.065</td>\n",
              "      <td>116.32</td>\n",
              "      <td>5.7992</td>\n",
              "      <td>8.653</td>\n",
              "      <td>0.5222</td>\n",
              "      <td>87.7610</td>\n",
              "      <td>0.0</td>\n",
              "      <td>47.707833</td>\n",
              "      <td>-122.451667</td>\n",
              "      <td>2025-08-14 22:08:48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>5.412</td>\n",
              "      <td>5.367</td>\n",
              "      <td>1022.8580</td>\n",
              "      <td>15.0997</td>\n",
              "      <td>38534.0</td>\n",
              "      <td>30.9542</td>\n",
              "      <td>3.4435</td>\n",
              "      <td>4.9211</td>\n",
              "      <td>150.352</td>\n",
              "      <td>59.123</td>\n",
              "      <td>116.32</td>\n",
              "      <td>5.7992</td>\n",
              "      <td>8.653</td>\n",
              "      <td>0.5222</td>\n",
              "      <td>87.7610</td>\n",
              "      <td>0.0</td>\n",
              "      <td>47.707833</td>\n",
              "      <td>-122.451667</td>\n",
              "      <td>2025-08-14 22:08:48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28169</th>\n",
              "      <td>28169</td>\n",
              "      <td>2.262</td>\n",
              "      <td>2.243</td>\n",
              "      <td>1022.5463</td>\n",
              "      <td>13.7198</td>\n",
              "      <td>36498.0</td>\n",
              "      <td>30.1989</td>\n",
              "      <td>4.3626</td>\n",
              "      <td>6.2346</td>\n",
              "      <td>190.541</td>\n",
              "      <td>72.497</td>\n",
              "      <td>1442.40</td>\n",
              "      <td>4.2424</td>\n",
              "      <td>8.656</td>\n",
              "      <td>0.4578</td>\n",
              "      <td>89.1852</td>\n",
              "      <td>0.0</td>\n",
              "      <td>47.707833</td>\n",
              "      <td>-122.451667</td>\n",
              "      <td>2025-08-14 22:08:48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28170</th>\n",
              "      <td>28170</td>\n",
              "      <td>2.329</td>\n",
              "      <td>2.309</td>\n",
              "      <td>1022.5456</td>\n",
              "      <td>13.7208</td>\n",
              "      <td>36498.0</td>\n",
              "      <td>30.1979</td>\n",
              "      <td>4.3664</td>\n",
              "      <td>6.2400</td>\n",
              "      <td>190.704</td>\n",
              "      <td>72.561</td>\n",
              "      <td>1344.50</td>\n",
              "      <td>4.2424</td>\n",
              "      <td>8.656</td>\n",
              "      <td>0.4578</td>\n",
              "      <td>89.1852</td>\n",
              "      <td>0.0</td>\n",
              "      <td>47.707833</td>\n",
              "      <td>-122.451667</td>\n",
              "      <td>2025-08-14 22:08:48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28171</th>\n",
              "      <td>28171</td>\n",
              "      <td>2.314</td>\n",
              "      <td>2.295</td>\n",
              "      <td>1022.5447</td>\n",
              "      <td>13.7219</td>\n",
              "      <td>36498.0</td>\n",
              "      <td>30.1970</td>\n",
              "      <td>4.3671</td>\n",
              "      <td>6.2410</td>\n",
              "      <td>190.737</td>\n",
              "      <td>72.574</td>\n",
              "      <td>1076.50</td>\n",
              "      <td>4.2424</td>\n",
              "      <td>8.651</td>\n",
              "      <td>0.4590</td>\n",
              "      <td>89.1583</td>\n",
              "      <td>0.0</td>\n",
              "      <td>47.707833</td>\n",
              "      <td>-122.451667</td>\n",
              "      <td>2025-08-14 22:08:48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28172</th>\n",
              "      <td>28172</td>\n",
              "      <td>2.329</td>\n",
              "      <td>2.309</td>\n",
              "      <td>1022.5444</td>\n",
              "      <td>13.7223</td>\n",
              "      <td>36498.0</td>\n",
              "      <td>30.1966</td>\n",
              "      <td>4.3641</td>\n",
              "      <td>6.2367</td>\n",
              "      <td>190.606</td>\n",
              "      <td>72.525</td>\n",
              "      <td>989.38</td>\n",
              "      <td>4.2424</td>\n",
              "      <td>8.651</td>\n",
              "      <td>0.4590</td>\n",
              "      <td>89.1583</td>\n",
              "      <td>0.0</td>\n",
              "      <td>47.707833</td>\n",
              "      <td>-122.451667</td>\n",
              "      <td>2025-08-14 22:08:48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28173</th>\n",
              "      <td>28173</td>\n",
              "      <td>2.262</td>\n",
              "      <td>2.243</td>\n",
              "      <td>1022.5436</td>\n",
              "      <td>13.7234</td>\n",
              "      <td>36498.0</td>\n",
              "      <td>30.1963</td>\n",
              "      <td>4.3642</td>\n",
              "      <td>6.2369</td>\n",
              "      <td>190.610</td>\n",
              "      <td>72.527</td>\n",
              "      <td>1049.60</td>\n",
              "      <td>4.2424</td>\n",
              "      <td>8.656</td>\n",
              "      <td>0.4578</td>\n",
              "      <td>89.1852</td>\n",
              "      <td>0.0</td>\n",
              "      <td>47.707833</td>\n",
              "      <td>-122.451667</td>\n",
              "      <td>2025-08-14 22:08:48</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>28174 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-73dcc2ef-6554-4e25-952f-fe556c5c065a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-73dcc2ef-6554-4e25-952f-fe556c5c065a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-73dcc2ef-6554-4e25-952f-fe556c5c065a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-ff8dabdd-0669-46a2-9c90-d5e3fab6287f\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ff8dabdd-0669-46a2-9c90-d5e3fab6287f')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-ff8dabdd-0669-46a2-9c90-d5e3fab6287f button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "  <div id=\"id_97dd8d7a-4036-4a2b-b794-b2ab2ff388e0\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data_0')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_97dd8d7a-4036-4a2b-b794-b2ab2ff388e0 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('data_0');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data_0",
              "summary": "{\n  \"name\": \"data_0\",\n  \"rows\": 28174,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8133,\n        \"min\": 0,\n        \"max\": 28173,\n        \"num_unique_values\": 28174,\n        \"samples\": [\n          5908,\n          905,\n          9212\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PRES\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 59.885225228543106,\n        \"min\": 0.759,\n        \"max\": 181.949,\n        \"num_unique_values\": 10076,\n        \"samples\": [\n          4.93,\n          5.245,\n          41.236\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DEPTH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 59.35952529226463,\n        \"min\": 0.752,\n        \"max\": 180.347,\n        \"num_unique_values\": 10074,\n        \"samples\": [\n          33.805,\n          2.056,\n          2.294\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"density\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5094970552350204,\n        \"min\": 1021.9917,\n        \"max\": 1024.0656,\n        \"num_unique_values\": 9815,\n        \"samples\": [\n          1023.5751,\n          1023.66,\n          1023.8594\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TEMP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4909668865420825,\n        \"min\": 12.174,\n        \"max\": 15.2436,\n        \"num_unique_values\": 4947,\n        \"samples\": [\n          13.4714,\n          13.7419,\n          13.5741\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"c0uS/cm\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 234.85525368819387,\n        \"min\": 35542.0,\n        \"max\": 38534.0,\n        \"num_unique_values\": 936,\n        \"samples\": [\n          36067.0,\n          36304.0,\n          36532.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PSAL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.21129934464145514,\n        \"min\": 29.6956,\n        \"max\": 31.0466,\n        \"num_unique_values\": 3765,\n        \"samples\": [\n          30.6089,\n          30.4776,\n          30.2136\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"oxygen_ml_L\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2408268914677692,\n        \"min\": 3.4327,\n        \"max\": 4.9676,\n        \"num_unique_values\": 5344,\n        \"samples\": [\n          3.8141,\n          3.7289,\n          3.7496\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sbeox0Mg/L\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3441659951122709,\n        \"min\": 4.9057,\n        \"max\": 7.0992,\n        \"num_unique_values\": 6656,\n        \"samples\": [\n          6.051,\n          6.2944,\n          5.3506\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sbox0Mm/Kg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.552488546171473,\n        \"min\": 149.907,\n        \"max\": 216.949,\n        \"num_unique_values\": 12018,\n        \"samples\": [\n          163.57,\n          162.678,\n          182.289\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sbeox0PS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.511733110736223,\n        \"min\": 58.034,\n        \"max\": 82.16,\n        \"num_unique_values\": 7488,\n        \"samples\": [\n          60.391,\n          59.874,\n          65.017\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"par\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 397.7868886110017,\n        \"min\": 1e-12,\n        \"max\": 3478.8,\n        \"num_unique_values\": 2390,\n        \"samples\": [\n          1.0162,\n          3.059,\n          47.449\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"flECO-AFL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9882874365550949,\n        \"min\": 2.6857,\n        \"max\": 6.8065,\n        \"num_unique_values\": 126,\n        \"samples\": [\n          3.5098,\n          5.7076,\n          4.6698\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ph\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.03053143930656369,\n        \"min\": 8.563,\n        \"max\": 8.675,\n        \"num_unique_values\": 71,\n        \"samples\": [\n          8.641,\n          8.658,\n          8.572\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CStarAt0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.11102517855882357,\n        \"min\": 0.3053,\n        \"max\": 0.9428,\n        \"num_unique_values\": 414,\n        \"samples\": [\n          0.7141,\n          0.7933,\n          0.639\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CStarTr0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.4336168468210237,\n        \"min\": 79.0011,\n        \"max\": 92.6516,\n        \"num_unique_values\": 414,\n        \"samples\": [\n          83.6498,\n          82.0106,\n          85.2352\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"flag\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LATITUDE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.881941824967456e-13,\n        \"min\": 47.70783333333333,\n        \"max\": 47.70783333333333,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          47.70783333333333\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LONGITUDE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.096564868657662e-12,\n        \"min\": -122.45166666666668,\n        \"max\": -122.45166666666668,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          -122.45166666666668\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"datetime_first_scan\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"2025-08-14 22:08:48\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_0['DEPTH']\n",
        "data_0['TEMP']"
      ],
      "metadata": {
        "collapsed": true,
        "id": "fftzac1opf5n"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Temperature Profiles\n",
        "plt.plot(data_0['TEMP'],data_0['DEPTH'],label='Morning')\n",
        "plt.plot(data_1['TEMP'],data_1['DEPTH'],label='Afternoon')\n",
        "plt.legend(loc = 'lower right')\n",
        "plt.gca().invert_yaxis()   # This reverses the y-axis\n",
        "plt.gca().xaxis.tick_top()\n",
        "plt.gca().xaxis.set_label_position('top')\n",
        "plt.xlabel('Temperature (°C)')\n",
        "plt.ylabel('Depth (m)');\n",
        "\n",
        "# save figure\n",
        "plt.savefig(\"/content/temp_profiles.png\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 446
        },
        "id": "7Ju6zJ1Irtst",
        "outputId": "091c4e5d-b3b2-4f85-9b95-ff3830a105a7"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}